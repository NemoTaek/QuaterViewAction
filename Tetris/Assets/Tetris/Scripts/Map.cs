using System.Collections;
using System.Collections.Generic;
using Unity.Burst.Intrinsics;
using UnityEngine;
using UnityEngine.SocialPlatforms.Impl;
using UnityEngine.UI;

public class Map : MonoBehaviour
{
    public Board board;

    public Button prev;
    public Button next;
    public Text mapTitle;

    int[] mapArray;
    public string[] mapTitleArray;
    public int mapIndex;

    public int[] stageMapList;

    // 맵 만들때 참고
    // 0: 하늘색
    // 1: 파란색
    // 2: 주황색
    // 3: 노란색
    // 4: 초록색
    // 5: 보라색
    // 6: 빨간색

    void Awake()
    {
        mapTitleArray = new string[6] { "기본", "낭떠러지", "구멍난 낭떠러지", "물고기", "하늘섬", "구멍송송" };
    }

    void Start()
    {

    }

    void Update()
    {
        
    }

    public void SetPrevMap()
    {
        mapIndex = (mapIndex != 0) ? mapIndex - 1 : mapTitleArray.Length - 1;

        // 선택한 맵을 출력
        mapTitle.text = mapTitleArray[mapIndex];
        board.CreateMap(GameManager.instance.mapInfo[mapIndex]);
    }

    public void SetNextMap()
    {
        mapIndex = (mapIndex != (mapTitleArray.Length - 1)) ? mapIndex + 1 : 0;

        // 선택한 맵을 출력
        mapTitle.text = mapTitleArray[mapIndex];
        board.CreateMap(GameManager.instance.mapInfo[mapIndex]);
    }

    public int[] MapEmpty()
    {
        mapArray = new int[200] {
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1};

        return mapArray;
    }

    public int[] MapCliff()
    {
        mapArray = new int[200] { 
            0, 0, 0, 0, 0, 0, 0, 0, -1, -1,
            1, 1, 1, 1, 1, 1, 1, 1, -1, -1,
            2, 2, 2, 2, 2, 2, 2, 2, -1, -1,
            3, 3, 3, 3, 3, 3, 3, 3, -1, -1,
            4, 4, 4, 4, 4, 4, 4, 4, -1, -1,
            5, 5, 5, 5, 5, 5, 5, 5, -1, -1,
            6, 6, 6, 6, 6, 6, 6, 6, -1, -1,
            5, 5, 5, 5, 5, 5, 5, 5, -1, -1,
            4, 4, 4, 4, 4, 4, 4, 4, -1, -1,
            3, 3, 3, 3, 3, 3, 3, 3, -1, -1,
            2, 2, 2, 2, 2, 2, 2, 2, -1, -1,
            1, 1, 1, 1, 1, 1, 1, 1, -1, -1,
            0, 0, 0, 0, 0, 0, 0, 0, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1};

        return mapArray;
    }

    public int[] MapHoledCliff()
    {
        mapArray = new int[200] {
            0, 0, 0, 0, 0, 0, 0, 0, 0, -1,
            1, 1, -1, 1, 1, 1, 1, 1, 1, -1,
            2, 2, 2, -1, 2, 2, 2, 2, 2, -1,
            3, 3, 3, 3, -1, 3, 3, 3, 3, -1,
            4, 4, 4, 4, 4, -1, 4, 4, 4, -1,
            5, 5, 5, 5, 5, 5, -1, 5, 5, -1,
            6, 6, 6, 6, 6, 6, 6, -1, 6, -1,
            5, 5, 5, 5, 5, 5, -1, 5, 5, -1,
            4, 4, 4, 4, 4, -1, 4, 4, 4, -1,
            3, 3, 3, 3, -1, 3, 3, 3, 3, -1,
            2, 2, 2, -1, 2, 2, 2, 2, 2, -1,
            1, 1, -1, 1, 1, 1, 1, 1, 1, -1,
            0, 0, 0, 0, 0, 0, 0, 0, 0, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1};

        return mapArray;
    }

    public int[] MapFish()
    {
        mapArray = new int[200] {
            -1, 0, 0, -1, -1, -1, -1, 0, 0, -1,
            -1, -1, 0, 0, -1, -1, 0, 0, -1, -1,
            -1, -1, -1, 0, 0, 0, 0, -1, -1, -1,
            -1, -1, -1, -1, 0, 0, -1, -1, -1, -1,
            -1, -1, -1, 0, 0, 0, 0, -1, -1, -1,
            -1, -1, 0, 0, 0, 0, 0, 0, -1, -1,
            -1, 2, 0, 0, 0, 0, 0, 0, 2, -1,
            -1, 2, 0, 0, 0, 0, 0, 0, 2, -1,
            -1, 2, 0, 1, 1, 1, 1, 0, 2, -1,
            -1, -1, 1, 0, 0, 0, 0, 1, -1, -1,
            -1, -1, 0, 0, 0, 3, 0, 0, -1, -1,
            -1, -1, -1, 0, 0, 0, 0, -1, -1, -1,
            -1, -1, -1, -1, 0, 0, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1};

        return mapArray;
    }

    public int[] MapSkyLand()
    {
        mapArray = new int[200] {
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, 0, 0, -1, -1, -1, -1,
            -1, -1, -1, 0, 0, 0, 0, -1, -1, -1,
            -1, -1, 0, 0, 0, 0, 0, 0, -1, -1,
            -1, 0, 0, 0, 0, 0, 0, 0, 0, -1,
            -1, 4, 4, 4, 4, 4, 4, 4, 4, -1,
            -1, -1, -1, -1, -1, 4, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, 4, -1, -1, -1, -1,
            -1, -1, -1, 4, 4, 4, 4, 4, -1, -1,
            -1, -1, -1, 4, -1, 4, -1, 4, -1, -1,
            -1, -1, -1, -1, -1, 4, -1, -1, -1, -1,
            -1, -1, -1, -1, 3, 3, 3, -1, -1, -1,
            -1, -1, -1, -1, 3, 2, 3, -1, -1, -1,
            -1, -1, -1, -1, 3, 3, 3, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1};

        return mapArray;
    }

    public int[] MapDot()
    {
        mapArray = new int[200] {
            0, -1, -1, 1, -1, -1, 2, -1, -1, 3,
            -1, -1, 4, -1, -1, 5, -1, -1, 6, -1,
            -1, 0, -1, -1, 1, -1, -1, 2, -1, -1,
            3, -1, -1, 4, -1, -1, 5, -1, -1, 6,
            -1, -1, 0, -1, -1, 1, -1, -1, 2, -1,
            -1, 3, -1, -1, 4, -1, -1, 5, -1, -1,
            6, -1, -1, 0, -1, -1, 1, -1, -1, 2,
            -1, -1, 3, -1, -1, 4, -1, -1, 5, -1,
            -1, 6, -1, -1, 0, -1, -1, 1, -1, -1,
            2, -1, -1, 3, -1, -1, 4, -1, -1, 5, 
            -1, -1, 6, -1, -1, 0, -1, -1, 1, -1,
            -1, 2, -1, -1, 3, -1, -1, 4, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1};

        return mapArray;
    }

    public int[] MapMission1()
    {
        mapArray = new int[200] {
            0, -1, -1, -1, -1, -1, -1, -1, -1, 3,
            1, -1, -1, -1, -1, -1, -1, -1, -1, 4,
            2, -1, -1, -1, -1, -1, -1, -1, -1, 5,
            3, -1, -1, -1, -1, -1, -1, -1, -1, 6,
            4, -1, -1, -1, -1, -1, -1, -1, -1, 0,
            5, -1, -1, -1, -1, -1, -1, -1, -1, 1,
            6, -1, -1, -1, -1, -1, -1, -1, -1, 2,
            0, -1, -1, -1, -1, -1, -1, -1, -1, 3,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1};

        return mapArray;
    }

    public int[] MapMission2()
    {
        mapArray = new int[200] {
            -1, 4, -1, -1, -1, -1, 1, -1, -1, -1,
            -1, -1, -1, 2, -1, -1, -1, -1, 6, -1,
            -1, -1, -1, -1, -1, 0, -1, -1, -1, -1,
            -1, -1, 1, -1, -1, -1, 3, 5, -1, -1,
            6, -1, -1, -1, 4, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1};

        return mapArray;
    }

    public int[] MapMission3()
    {
        mapArray = new int[200] {
            1, 3, -1, 5, 0, 2, 6, -1, 4, 1,
            -1, 3, 5, -1, 0, 2, -1, 6, 4, -1,
            -1, -1, 2, 6, -1, -1, 4, 1, -1, -1,
            -1, -1, -1, 1, 3, 5, 0, -1, -1, -1,
            -1, -1, -1, -1, 6, 4, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1};

        return mapArray;
    }

    public int[] MapMission4()
    {
        mapArray = new int[200] {
            4, -1, -1, -1, -1, -1, -1, -1, -1, 5,
            2, 6, -1, -1, -1, -1, -1, -1, 6, 1,
            3, 5, 0, -1, -1, -1, -1, 4, 3, 0,
            4, 1, -1, -1, -1, -1, -1, -1, 5, 2,
            6, -1, -1, -1, -1, -1, -1, -1, -1, 1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1};

        return mapArray;
    }

    public int[] MapMission5()
    {
        mapArray = new int[200] {
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, 1, 5, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, 0, -1, -1, -1, -1, 6, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, 4, 3, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1};

        return mapArray;
    }

    public int[] MapMission6()
    {
        mapArray = new int[200] {
            1, -1, -1, -1, -1, -1, -1, 3, -1, -1,
            -1, 1, -1, -1, -1, -1, -1, -1, 3, -1,
            -1, -1, 1, -1, -1, -1, -1, -1, -1, 3,
            -1, -1, -1, 1, -1, -1, 4, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, 4, -1, -1,
            6, -1, -1, -1, -1, -1, -1, -1, 4, -1,
            -1, 6, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1};

        return mapArray;
    }

    public int[] MapMission7()
    {
        mapArray = new int[200] {
            -1, 6, -1, 4, 4, 4, -1, 1, -1, -1,
            -1, 6, -1, 4, -1, -1, -1, 1, -1, -1,
            -1, 6, -1, 4, 4, 4, -1, 1, -1, -1,
            -1, 6, -1, 4, -1, -1, -1, 1, -1, -1,
            6, 6, 6, -1, 4, 4, 4, 1, 1, 1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1};

        return mapArray;
    }

    public int[] MapMission8()
    {
        mapArray = new int[200] {
            6, -1, 6, 4, 4, 4, 1, 1, -1, -1,
            6, 6, -1, -1, 4, -1, -1, -1, 1, -1,
            6, 6, 6, -1, 4, -1, -1, 1, -1, -1,
            6, -1, 6, -1, 4, -1, 1, -1, -1, -1,
            6, 6, 6, 4, 4, 4, -1, 1, 1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1};

        return mapArray;
    }
}
